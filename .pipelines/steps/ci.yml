parameters:
  - name: configuration
  - name: projects
    type: object

steps:
  - checkout: self
    submodules: recursive

  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'

  - script: 
      npm install
    displayName: 'npm install'
    workingDirectory: $(Build.SourcesDirectory)/src/Cyjack.UI

  - script: 
      npm run build
    displayName: 'npm build'
    workingDirectory: $(Build.SourcesDirectory)/src/Cyjack.UI

  - task: CopyFiles@2
    inputs:
      Contents: 'src/ui/**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/output/ui'

  - task: ArchiveFiles@2
    displayName: "Archive files"
    inputs:
      rootFolderOrFile: $(Build.ArtifactStagingDirectory)/output/ui
      includeRootFolder: false
      archiveFile: "$(System.ArtifactsDirectory)/output/Cyjack.UI.zip"
  
  - publish: '$(System.ArtifactsDirectory)/output/Cyjack.UI.zip'
    displayName: 'Publish - Function App'
    artifact: 'drop'

  - task: UseDotNet@2
    displayName: 'Use .NET Core 6.0.x'
    inputs:
      packageType: 'sdk'
      version: 6.0.x

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: restore
      projects: '**/CyjackDefender.sln'
      feedsToUse: 'config'
      nugetConfigPath: '.nuget/nuget.config'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      projects: '**/CyjackDefender.sln'
      arguments: '--configuration ${{ parameters.configuration }} --no-incremental --no-restore'

  - ${{ each project in parameters.projects }}:

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish - ${{ project }}'
      inputs:
        command: publish
        projects: '$(Build.SourcesDirectory)/src/${{ project }}/*.csproj'
        arguments: '--configuration ${{ parameters.configuration }} --output output/${{ project }} --no-restore'
        publishWebProjects: false
        modifyOutputPath: false
        zipAfterPublish: false
  
    - task: ArchiveFiles@2
      displayName: "Archive files"
      inputs:
        rootFolderOrFile: output/${{ project }}
        includeRootFolder: false
        archiveFile: "$(System.ArtifactsDirectory)/output/${{ project }}.zip"

    - publish: '$(System.ArtifactsDirectory)/output/${{ project }}.zip'
      displayName: 'Publish - Function App'
      artifact: 'drop'