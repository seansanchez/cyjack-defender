# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest
  
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'af3d8302-6040-4b18-83ae-cb207debfcd3'

  # Web app name
  webAppName: 'cyjackui'

  # Environment name
  environmentName: 'cyjackui'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Npm@1
      displayName: 'Npm Install'
      inputs:
        command: 'install'
        workingDir: '/src/Cyjack.UI/'

    - task: Npm@1
      displayName: 'Npm Build'
      inputs:
        command: 'custom'
        customCommand: 'run build'
        workingDir: '/src/Cyjack.UI/'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '/src/ui'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/deployment.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))    
      displayName: 'Publish build artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'ui_deploy'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: 'ui_deploy'
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy artifact to Azure App Service'
            inputs:
              ConnectedServiceName: $(azureSubscription)
              WebAppName: $(webAppName)
              Package: "$(System.ArtifactsDirectory)/ui_deploy/deployment.zip"
              UseWebDeploy: true
              TakeAppOfflineFlag: false
              RenameFilesFlag: false